import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

pd.read_csv("Social_Network_Ads.csv")

df=pd.read_csv("Social_Network_Ads.csv")

X = df.iloc[:, [2, 3]].values
Y = df.iloc[:, 4].values
print(X[:3, :])
print('_'*15)
print(Y[:3])

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.25, random_state = 0)
print(X_train[:3])
print('-'*15)
print(Y_train[:3])
print('-'*15)
print(X_test[:3])
print('-'*15)
print(Y_test[:3])

from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.transform(X_test)
print(X_train[:3])
print('-'*15)
print(X_test[:3])

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state = 0, solver='lbfgs' )
classifier.fit(X_train, Y_train)
Y_pred = classifier.predict(X_test)
print(X_test[:10])
print('-'*15)
print(Y_pred[:10])

print(Y_pred[:20])
print(Y_test[:20])

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(Y_test, Y_pred)
print(cm)

from matplotlib.colors import ListedColormap
X_set, Y_set = X_train, Y_train
X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop
= X_set[:, 0].max() + 1, step = 0.01),
np.arange(start = X_set[:, 1].min() - 1, stop
= X_set[:, 1].max() + 1, step = 0.01))
plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),
alpha = 0.6, cmap = ListedColormap(('red', 'green')))
plt.xlim(X1.min(), X1.max())
plt.ylim(X2.min(), X2.max())
for i, j in enumerate(np.unique(Y_set)):
    plt.scatter(X_set[Y_set == j, 0], X_set[Y_set == j, 1],c = ListedColormap(('red', 'green'))(i), label =j)
    
plt.title('Logistic Regression (Training set)')
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
plt.show()